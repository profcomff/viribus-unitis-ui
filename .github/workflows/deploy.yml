name: CI


on:
    push:
        tags:
            - 'v*'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-prod-image:
        name: Собираем production Docker
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Define production metadata
              id: meta-prod
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=tag,enable=true
                      type=raw,value=prod,enable=true
                      type=raw,value=latest,enable=true

            - name: Build and push production Docker
              uses: docker/build-push-action@v4
              with:
                  file: ./deployment/Dockerfile
                  context: .
                  push: true
                  build-args: |
                      BUILD_MODE=production
                      LAUNCH_MODE=production
                      APP_VERSION=${{ github.ref_name }}
                  tags: ${{ steps.meta-prod.outputs.tags }}
                  labels: ${{ steps.meta-prod.outputs.labels }}

    deploy-production:
        name: Раскатываем production среду
        runs-on: [self-hosted, Linux]
        needs: [build-prod-image]
        environment:
            name: Production
            url: https://vu.profcomff.com/
        env:
            CONTAINER_NAME: com_profcomff_app
        permissions:
            packages: read
        steps:
            - name: Run docker container
              run: |
                  docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:prod
                  docker stop ${{ env.CONTAINER_NAME }} || true && docker rm ${{ env.CONTAINER_NAME }} || true
                  docker run \
                    --detach \
                    --restart always \
                    --network=web \
                    --name ${{ env.CONTAINER_NAME }} \
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:prod
